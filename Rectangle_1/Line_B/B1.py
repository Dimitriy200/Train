'''
Сбалансированный раунд

Дано:
n - кол-во задач
ai - сложность задачи i

Возможные операции над задачами:
 - удалить некоторые (возможно, ноль) задач из списка
 - переставить оставшиеся задачи в любом порядке, который вы пожелаете

Условия:
 - Раунд считается сбалансированным, если и только если абсолютная разница между сложностью 
    любых двух последовательных задач не превышает k(то есть меньше или равен k).

Задача:
Найти минимальное кол-во задач, которые нужно удалить, чтобы расстановка задач была сбалансированной

'''



# import sys
# import collections

def solve():
    
    t: int
    a: list
    n: list

    cnt = 1
    ans = 1

    #значение в [] - кол-во элементов, поэтому начало с 1
    t = input("t[1] = :")
    n = input("n[2] = :").split()
    a = input("a[n[1]] = :").split()

    n = to_int(n)
    a = to_int(a)
    t = int(t)

    for i in range(1, n[0]):
        if a[i] - a[i - 1] > n[1]:
            cnt = 1
        else:
            cnt += 1
        ans = max(ans, cnt)
    print(n[0] - ans)


def to_int(arr: list):
    for i in range(len(arr)):
        arr.insert(i, int(arr[i]))
    
    return arr


solve()












# if __name__ == '__main__':
#     t = int(sys.stdin.readline())
#     for _ in range(t):
#         solve()